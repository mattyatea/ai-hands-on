const config = {};
config.appName = 'MyApplication';
config.version = '1.0.0';
config.environment = process.env.NODE_ENV || 'development';
config.port = 3000;
config.host = 'localhost';
config.protocol = 'http';
config.baseUrl = 'http://localhost:3000';
config.apiPath = '/api/v1';
config.staticPath = '/static';
config.uploadPath = '/uploads';
config.tempPath = '/tmp';
config.logPath = '/logs';
config.dataPath = '/data';
config.configPath = '/config';
config.publicPath = '/public';
config.viewsPath = '/views';
config.sessionSecret = 'mysecretkey123456789';
config.jwtSecret = 'myjwtsecret987654321';
config.cookieSecret = 'mycookiesecret456789';
config.encryptionKey = 'myencryptionkey123';
config.saltRounds = 10;
config.tokenExpiry = 3600;
config.refreshTokenExpiry = 86400;
config.sessionTimeout = 1800;
config.maxLoginAttempts = 5;
config.lockoutDuration = 900;
config.passwordMinLength = 8;
config.passwordMaxLength = 128;
config.usernameMinLength = 3;
config.usernameMaxLength = 30;
config.emailMaxLength = 255;
config.database = {};
config.database.host = 'localhost';
config.database.port = 5432;
config.database.name = 'myapp_db';
config.database.user = 'dbuser';
config.database.password = 'dbpassword123';
config.database.dialect = 'postgres';
config.database.pool = {};
config.database.pool.max = 10;
config.database.pool.min = 2;
config.database.pool.idle = 10000;
config.database.pool.acquire = 30000;
config.database.pool.evict = 1000;
config.database.logging = false;
config.database.synchronize = false;
config.database.forceSync = false;
config.redis = {};
config.redis.host = 'localhost';
config.redis.port = 6379;
config.redis.password = '';
config.redis.db = 0;
config.redis.keyPrefix = 'myapp:';
config.redis.ttl = 3600;
config.redis.maxRetries = 3;
config.redis.retryDelay = 1000;
config.redis.connectionTimeout = 5000;
config.redis.commandTimeout = 5000;
config.elasticsearch = {};
config.elasticsearch.host = 'localhost';
config.elasticsearch.port = 9200;
config.elasticsearch.index = 'myapp';
config.elasticsearch.type = 'document';
config.elasticsearch.apiVersion = '7.0';
config.elasticsearch.requestTimeout = 30000;
config.elasticsearch.pingTimeout = 3000;
config.elasticsearch.maxRetries = 3;
config.rabbitmq = {};
config.rabbitmq.host = 'localhost';
config.rabbitmq.port = 5672;
config.rabbitmq.username = 'guest';
config.rabbitmq.password = 'guest';
config.rabbitmq.vhost = '/';
config.rabbitmq.exchange = 'myapp_exchange';
config.rabbitmq.queue = 'myapp_queue';
config.rabbitmq.routingKey = 'myapp.#';
config.rabbitmq.durable = true;
config.rabbitmq.autoDelete = false;
config.smtp = {};
config.smtp.host = 'smtp.gmail.com';
config.smtp.port = 587;
config.smtp.secure = false;
config.smtp.user = 'myapp@gmail.com';
config.smtp.password = 'emailpassword123';
config.smtp.from = 'noreply@myapp.com';
config.smtp.maxConnections = 5;
config.smtp.maxMessages = 100;
config.smtp.rateDelta = 1000;
config.smtp.rateLimit = 5;
config.aws = {};
config.aws.region = 'ap-northeast-1';
config.aws.accessKeyId = 'AKIAIOSFODNN7EXAMPLE';
config.aws.secretAccessKey = 'wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY';
config.aws.s3 = {};
config.aws.s3.bucket = 'myapp-bucket';
config.aws.s3.acl = 'private';
config.aws.s3.signatureVersion = 'v4';
config.aws.s3.maxFileSize = 10485760;
config.aws.s3.allowedFileTypes = ['image/jpeg', 'image/png', 'image/gif', 'application/pdf'];
config.aws.dynamodb = {};
config.aws.dynamodb.tableName = 'myapp-table';
config.aws.dynamodb.readCapacity = 5;
config.aws.dynamodb.writeCapacity = 5;
config.stripe = {};
config.stripe.publishableKey = 'pk_test_51234567890abcdefghijk';
config.stripe.secretKey = 'sk_test_51234567890abcdefghijk';
config.stripe.webhookSecret = 'whsec_1234567890abcdefghijk';
config.stripe.currency = 'jpy';
config.stripe.paymentMethods = ['card'];
config.oauth = {};
config.oauth.google = {};
config.oauth.google.clientId = '1234567890-abcdefghijk.apps.googleusercontent.com';
config.oauth.google.clientSecret = 'GOCSPX-1234567890abcdefghijk';
config.oauth.google.callbackUrl = '/auth/google/callback';
config.oauth.google.scope = ['profile', 'email'];
config.oauth.facebook = {};
config.oauth.facebook.appId = '1234567890';
config.oauth.facebook.appSecret = 'abcdefghijk1234567890';
config.oauth.facebook.callbackUrl = '/auth/facebook/callback';
config.oauth.facebook.scope = ['email', 'public_profile'];
config.oauth.twitter = {};
config.oauth.twitter.consumerKey = 'abcdefghijk1234567890';
config.oauth.twitter.consumerSecret = '1234567890abcdefghijk1234567890abcdefghijk';
config.oauth.twitter.callbackUrl = '/auth/twitter/callback';
config.oauth.github = {};
config.oauth.github.clientId = 'abcdefghijk1234567890';
config.oauth.github.clientSecret = '1234567890abcdefghijk1234567890abcdefghijk';
config.oauth.github.callbackUrl = '/auth/github/callback';
config.oauth.github.scope = ['user:email'];
config.cors = {};
config.cors.origin = '*';
config.cors.methods = ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'];
config.cors.allowedHeaders = ['Content-Type', 'Authorization', 'X-Requested-With'];
config.cors.exposedHeaders = ['X-Total-Count'];
config.cors.credentials = true;
config.cors.maxAge = 86400;
config.rateLimit = {};
config.rateLimit.windowMs = 900000;
config.rateLimit.max = 100;
config.rateLimit.message = 'Too many requests from this IP';
config.rateLimit.standardHeaders = true;
config.rateLimit.legacyHeaders = false;
config.pagination = {};
config.pagination.defaultLimit = 20;
config.pagination.maxLimit = 100;
config.pagination.defaultPage = 1;
config.upload = {};
config.upload.maxFileSize = 10485760;
config.upload.maxFiles = 10;
config.upload.allowedMimeTypes = ['image/jpeg', 'image/png', 'image/gif', 'application/pdf', 'text/plain'];
config.upload.uploadDir = '/tmp/uploads';
config.upload.keepExtensions = true;
config.cache = {};
config.cache.type = 'redis';
config.cache.ttl = 3600;
config.cache.checkPeriod = 600;
config.cache.maxKeys = 1000;
config.cache.stdTTL = 600;
config.cache.useClones = false;
config.logger = {};
config.logger.level = 'info';
config.logger.format = 'combined';
config.logger.datePattern = 'YYYY-MM-DD';
config.logger.maxSize = '20m';
config.logger.maxFiles = '14d';
config.logger.handleExceptions = true;
config.logger.handleRejections = true;
config.monitoring = {};
config.monitoring.enabled = true;
config.monitoring.interval = 60000;
config.monitoring.metrics = ['cpu', 'memory', 'disk', 'network'];
config.monitoring.alertThreshold = 80;
config.monitoring.alertEmail = 'admin@myapp.com';
config.security = {};
config.security.helmet = true;
config.security.csrf = true;
config.security.xss = true;
config.security.hsts = true;
config.security.noSniff = true;
config.security.ieNoOpen = true;
config.security.xssFilter = true;
config.security.hidePoweredBy = true;
config.features = {};
config.features.registration = true;
config.features.emailVerification = true;
config.features.twoFactorAuth = false;
config.features.socialLogin = true;
config.features.passwordReset = true;
config.features.userProfile = true;
config.features.notifications = true;
config.features.analytics = true;
config.features.payment = false;
config.features.subscription = false;
config.maintenance = {};
config.maintenance.enabled = false;
config.maintenance.message = 'Site is under maintenance';
config.maintenance.allowedIPs = ['127.0.0.1'];
config.maintenance.startTime = null;
config.maintenance.endTime = null;
module.exports = config;